# core HAL config file for simulation

# first load all the RT modules that will be needed
# kinematics
loadrt [KINS]KINEMATICS
#loadrt lineardeltakins
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS

#Load Ethercat configuration
loadusr -W lcec_conf ethercat-conf.xml

#Load Ethercat into RT
loadrt lcec

# Install PLC.
loadrt classicladder_rt numPhysInputs=16 numPhysOutputs=16 numS32in=10 numS32out=10 numFloatIn=10 numFloatOut=10

#Add functions to servo thread so they will be evaluated
#every servo period.
#Inputs are read at the beginning of the thread

# Do processing.
addf classicladder.0.refresh servo-thread -1

addf motion-command-handler servo-thread -1
addf motion-controller servo-thread -1

addf lcec.read-all servo-thread
addf lcec.write-all servo-thread

# Enable drives

setp lcec.0.0.out1-1 1
setp lcec.0.1.out1-1 1
setp lcec.0.2.out1-1 1

setp lcec.0.0.out1-2 1
setp lcec.0.1.out1-2 1
setp lcec.0.2.out1-2 1

setp lcec.0.0.out4 0x08
setp lcec.0.1.out4 0x08
setp lcec.0.2.out4 0x08

setp lcec.0.0.ei 20000
setp lcec.0.0.mr 1

loadusr -W lineardelta MIN_JOINT=-420

# create HAL signals for position commands from motion module
# loop position commands back to motion module feedback
#net J0pos joint.0.motor-pos-cmd => lcec.0.0.out2 lineardelta.joint0
#net J1pos joint.1.motor-pos-cmd => lcec.0.1.out2 lineardelta.joint1
#net J2pos joint.2.motor-pos-cmd => lcec.0.2.out2 lineardelta.joint2
#net Apos joint.3.motor-pos-cmd => joint.3.motor-pos-fb

net L lineardeltakins.L => lineardelta.L
net R lineardeltakins.R => lineardelta.R

sets L 269
sets R 130.25

# estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in => lcec.0.0.out1-0 
net estop-loop => lcec.0.1.out1-0 
net estop-loop => lcec.0.2.out1-0 
net power halui.machine.is-on => lcec.0.0.out1-3 
net power => lcec.0.1.out1-3 
net power => lcec.0.2.out1-3 


# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed

net spindle-fwd spindle.0.forward
net spindle-rev spindle.0.reverse
#net spindle-speed spindle.0.speed-out


loadrt scale

#net j0fb joint.0.motor-pos-fb => lcec.0.0.pin2
#net j1fb joint.1.motor-pos-fb => lcec.0.1.pin2
#net j2fb joint.2.motor-pos-fb => lcec.0.2.pin2

net mist iocontrol.0.coolant-mist

loadrt streamer depth=1024 cfg=fffffff
loadrt sampler depth=1024 cfg=ffffffffffff
addf streamer.0 servo-thread
addf sampler.0 servo-thread
loadusr halstreamer nurbs_out.txt
loadusr halsampler outfile.txt
setp streamer.0.enable FALSE
net j0 streamer.0.pin.4 => lcec.0.0.out2
net j1 streamer.0.pin.5 => lcec.0.1.out2
net j2 streamer.0.pin.6 => lcec.0.2.out2
net j0fb lcec.0.0.pin2 => sampler.0.pin.0
net j1fb lcec.0.1.pin2 => sampler.0.pin.1
net j2fb lcec.0.2.pin2 => sampler.0.pin.2
net sp0 lcec.0.0.sp => sampler.0.pin.3
net sp1 lcec.0.1.sp => sampler.0.pin.4
net sp2 lcec.0.2.sp => sampler.0.pin.5
net mn0 lcec.0.0.mn => sampler.0.pin.6
net mn1 lcec.0.1.mn => sampler.0.pin.7
net mn2 lcec.0.2.mn => sampler.0.pin.8
net ei0 lcec.0.0.ie => sampler.0.pin.9
net ei1 lcec.0.1.ie => sampler.0.pin.10
net ei2 lcec.0.2.ie => sampler.0.pin.11

net mist => streamer.0.enable
net mist => sampler.0.enable

